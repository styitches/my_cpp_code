#include<iostream>
using namespace std;
//利用构造函数和析构函数  进行初始化和清除
//如果没有初始化 使用时候结果位置
//没有清理 会造成一定 的安全问题
//如果自己不提供 编译器会提供 构造函数和析构函数是空实现
//构造函数语法： 类名(){}  
//没有返回值不写void  函数名称与类名相同  构造函数可以有参数 因此可以发生重载 
//程序调用对象时候会自动调用构造 无需手动调用 而且只会调用一次


//析构函数语法：~类名(){}
//没有返回值不写void 函数名称与类名相同 在名称前面加~ 
//*** 析构函数不可以有参数 因此不可以发生重载  
//程序在对象销毁前会自动调用析构，无需手动调用，而且只会调用一次

class Person{
public:
    //1 构造函数  line7
    Person(){
        cout << "person构造函数的调用" << endl;
    }
    //2 析构函数 line12
    ~Person(){
        cout << "person的析构函数调用" << endl;
    }
};


void test01(){
    Person p;  //正常的调用函数需要有小括号
    //创建了一个对象p 之后自动调用
    //栈上的数据，test01执行完毕之后，释放这个对象
    //如果写在main函数内部 需要函数体全部执行完毕之后再进行释放
}

int main (){
    test01();
}